<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:LeigodPauseTool.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sty="using:FluentAvalonia.Styling"
        xmlns:ui="using:FluentAvalonia.UI.Controls"
        xmlns:uip="using:FluentAvalonia.UI.Controls.Primitives"
        mc:Ignorable="d"
        x:Class="LeigodPauseTool.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Width="400"
        Height="600"
        Icon="/Assets/avalonia-logo.ico"
        Title="LeigodPauseTool">

    <StackPanel Spacing="15" Margin="20">
        <!-- 账号管理区域 -->
        <Border BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="8"
                Padding="15"
                Background="{DynamicResource CardBackgroundFillColorDefaultBrush}">
            <StackPanel Spacing="10">
                <TextBlock Text="账号管理" FontSize="14" FontWeight="SemiBold" Margin="0,0,0,5" />
                <StackPanel Orientation="Horizontal" Spacing="10">
                    <Button Command="{Binding GetAccountTokenCommand}" MinWidth="120">获取登录令牌</Button>
                    <Button Command="{Binding CheckAccountTokenValidityCommand}" MinWidth="120">检查登录状况</Button>
                </StackPanel>
            </StackPanel>
        </Border>

        <!-- 监控设置区域 -->
        <Border BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="8"
                Padding="15"
                Background="{DynamicResource CardBackgroundFillColorDefaultBrush}">
            <StackPanel Spacing="12">
                <TextBlock Text="监控设置" FontSize="14" FontWeight="SemiBold" Margin="0,0,0,5" />

                <StackPanel Orientation="Horizontal" Spacing="15">
                    <ui:NumberBox
                        Header="检测间隔(秒)"
                        Minimum="1"
                        Maximum="100000"
                        Value="{Binding IntervalTime}"
                        SpinButtonPlacementMode="Inline"
                        MinWidth="150" />
                    <StackPanel Orientation="Horizontal" Spacing="8" VerticalAlignment="Bottom" Margin="0,0,0,5">
                        <TextBlock Text="下次检测倒计时：" VerticalAlignment="Center"
                                   Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                        <TextBlock Text="{Binding CountdownSeconds}" VerticalAlignment="Center" FontWeight="Bold"
                                   Foreground="{DynamicResource SystemAccentColor}" FontSize="18" />
                        <TextBlock Text="秒" VerticalAlignment="Center"
                                   Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                    </StackPanel>
                </StackPanel>

                <Button Content="{Binding MonitorButtonContent}"
                        Command="{Binding MonitorCommand}"
                        HorizontalAlignment="Stretch"
                        Height="36" />
            </StackPanel>
        </Border>

        <!-- 进程管理区域 -->
        <Border BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="8"
                Padding="15"
                Background="{DynamicResource CardBackgroundFillColorDefaultBrush}">
            <StackPanel Spacing="10">
                <TextBlock Text="监控进程列表" FontSize="14" FontWeight="SemiBold" Margin="0,0,0,5" />

                <Grid ColumnDefinitions="*,Auto">
                    <TextBox Text="{Binding NewMonitoredProcess}"
                             Watermark="输入进程名称（例如：dota2）"
                             Grid.Column="0" />
                    <Button Command="{Binding AddMonitoredProcessCommand}"
                            Grid.Column="1"
                            MinWidth="100"
                            Margin="10, 0, 0, 0">
                        添加进程
                    </Button>
                </Grid>

                <ListBox ItemsSource="{Binding MonitoredProcesses}"
                         Height="150">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid ColumnDefinitions="*,Auto" Margin="5">
                                <TextBlock Text="{Binding}"
                                           VerticalAlignment="Center"
                                           Grid.Column="0" />
                                <Button Content="删除"
                                        Grid.Column="1"
                                        DataContext="{Binding $parent[Window].DataContext}"
                                        x:DataType="vm:MainWindowViewModel"
                                        Command="{Binding RemoveMonitoredProcessCommand}"
                                        CommandParameter="{Binding $parent[ListBoxItem].DataContext}"
                                        MinWidth="70" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </Border>
    </StackPanel>
</Window>